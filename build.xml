<project name="druphing" default="h">
  <property name="druphing.loaded" value="true" />
  <!-- For standalone Drupal Phing it should be current directory. -->
  <property name="druphing.base_path" value="" />

  <import file="${druphing.base_path}properties.xml" />

  <taskdef name="drush" classpath="${druphing.base_path}build/phingdrushtask" classname="DrushTask"/>

  <import file="${druphing.base_path}build/submodules/slack/build.xml" />
  <import file="${druphing.base_path}build/submodules/drupal/build.xml" />
  <import file="${druphing.base_path}build/submodules/repo/build.xml" />
  <import file="${druphing.base_path}build/submodules/backup/build.xml" />
  <import file="${druphing.base_path}build/submodules/restore/build.xml" />
  <import file="${druphing.base_path}build/submodules/project/build.xml" />
  <import file="${druphing.base_path}build/submodules/db/build.xml" />
  <import file="${druphing.base_path}build/submodules/codesniffer/build.xml" />
  <import file="${druphing.base_path}build/submodules/redis/build.xml" />
  <import file="${druphing.base_path}build/submodules/phpmd/build.xml" />
  <import file="${druphing.base_path}build/submodules/phpcpd/build.xml" />
  <import file="${druphing.base_path}build/submodules/jmeter/build.xml" />

  <if>
    <not>
      <isset property="server" />
    </not>
    <then>
      <property name="server" value="${env.default.server}" />
    </then>
  </if>

  <if>
    <not>
      <isset property="source" />
    </not>
    <then>
      <property name="source" value="${env.default.source}" />
    </then>
  </if>

  <!-- Build/rebuild whole site. -->
  <target name="build" depends="drush-make, restore-settings-file, drushrc-file-copy, site-install" />

  <target name="drush-make" depends="clear">
    <echo msg="Drupal make run" />
    <drush command="make" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <option name="uri">${project.drupal.uri}</option>
      <param>${project.make.file}</param>
      <param>${project.drupal.dir}</param>
    </drush>
    <phingcall target="add-permission" />
  </target>

  <target name="site-install" depends="db-drop, db-create, restore-custom-modules, restore-features-modules, restore-custom-themes, restore-project-files" description="Install site">
    <echo msg="Project installation started" />
    <phingcall target="drush-install" />
    <phingcall target="switch-modules"/>
    <phingcall target="add-permission" />
    <phingcall target="patches-apply" />
    <phingcall target="modules-enable">
      <property name="projects.installable" value="${project.drupal.module.custom}" />
    </phingcall>
    <phingcall target="modules-enable">
      <property name="projects.installable" value="${project.drupal.theme.custom}" />
    </phingcall>
    <phingcall target="install-default-theme" />
    <phingcall target="cc" />
    <phingcall target="modules-enable">
      <property name="projects.installable" value="${project.drupal.module.settings}" />
    </phingcall>
    <phingcall target="restore-nodes" />
    <echo msg="Project installation finished" />
  </target>

  <target name="drush-install">
    <drush command="site-install" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <option name="uri">${project.drupal.uri}</option>
      <option name="db-url">${env.db.driver}://${env.db.user}:${env.db.password}@${env.db.host}/${env.db.name}</option>
      <option name="db-su">${env.db.user.sudo}</option>
      <option name="db-su-pw">${env.db.user.sudo.password}</option>
      <option name="account-name">${project.drupal.admin.name}</option>
      <option name="account-pass">${project.drupal.admin.password}</option>
      <option name="account-mail">${project.drupal.admin.mail}</option>
      <option name="locale">${project.drupal.locale}</option>
      <option name="clean-url">${project.drupal.clean_url}</option>
      <option name="site-name">${project.drupal.site.name}</option>
      <option name="site-mail">${project.drupal.site.mail}</option>
      <param>standard</param>
    </drush>
    <echo msg="Drupal has been installed." />
  </target>

  <target name="drop" depends="clear, db-drop">
    <echo msg="Project dir has been cleared and db has been dropped" />
  </target>

  <target name="clear">
    <echo msg="Clear workspace" />
    <if>
      <available file="${project.drupal.dir}" property="dir_exists"/>
      <then>
        <phingcall target="add-permission" />
        <delete dir="${project.drupal.dir}"/>
      </then>
    </if>
  </target>

  <target name="switch-modules" description="Enable and disable modules">
    <phingcall target="modules-enable">
      <property name="projects.installable" value="${project.drupal.module.standard}" />
    </phingcall>
    <phingcall target="modules-enable">
      <property name="projects.installable" value="${project.drupal.module.contrib}" />
    </phingcall>
    <phingcall target="modules-disable">
      <property name="projects.disable" value="${project.drupal.module.uninstall}" />
    </phingcall>
    <phingcall target="modules-uninstall">
      <property name="projects.uninstall" value="${project.drupal.module.uninstall}" />
    </phingcall>
  </target>

  <target name="project-up" description="Build project">
    <phingcall target="restore-settings-file" />
    <phingcall target="drushrc-file-copy" />
    <phingcall target="git-submodule-update" />
    <if>
      <and>
        <isset property="source" />
        <equals arg1="${source}" arg2="production" />
      </and>
      <then>
        <phingcall target="db-restore-from-production" />
      </then>
      <else>
        <if>
          <and>
            <isset property="source" />
            <equals arg1="${source}" arg2="local" />
          </and>
          <then>
            <phingcall target="db-restore-from-local" />
          </then>
          <else>
            <phingcall target="db-restore-from-stage" />
          </else>
        </if>
      </else>
    </if>
    <phingcall target="project-environment" />
    <phingcall target="git-submodule-update" />
  </target>

  <!-- Short alias for project-up. -->
  <target name="pu" depends="project-up" />

  <!-- The same as project-up. -->
  <target name="project-up-from-stage">
    <phingcall target="project-up">
      <property name="source" value="stage" />
    </phingcall>
  </target>

  <target name="project-up-from-local">
    <phingcall target="project-up">
      <property name="source" value="local" />
    </phingcall>
  </target>

  <target name="project-up-from-production">
    <phingcall target="project-up">
      <property name="source" value="production" />
    </phingcall>
  </target>

  <target name="help">
    <loadfile property="readme" file="README.txt" />
    <echo msg="${readme}" />
  </target>

  <target name="h">
    <loadfile property="readme" file="readme_short.txt" />
    <echo msg="${readme}" />
  </target>

</project>
