<project name="repo">

  <target name="pull">
    <phingcall target="git-pull" />
  </target>

  <target name="push">
    <phingcall target="commit" />
    <phingcall target="git-push" />
  </target>

  <!-- Short alias for push. -->
  <target name="p" depends="push" />

  <target name="commit">
    <phingcall target="check-m" />
    <phingcall target="git-add-all" />
    <phingcall target="git-commit" />
  </target>

  <!-- Short alias for commit. -->
  <target name="c" depends="commit" />

  <!-- Combine power of both pull and push in one single command! -->
  <target name="pull-push">
    <phingcall target="check-m" />
    <phingcall target="pull" />
    <!-- TODO: exit if failed -->
    <phingcall target="push" />
  </target>

  <!-- Short alias for pull-push. -->
  <target name="pp" depends="pull-push" />

  <target name="commit-pull-push">
    <phingcall target="commit" />
    <phingcall target="git-pull" />
    <!-- TODO: exit if failed -->
    <phingcall target="git-push" />
  </target>

  <!-- Short alias for commit-pull-push. -->
  <target name="cpp" depends="commit-pull-push" />

  <!-- Short alias for commit-pull-push. Easier to remeber then cpp. -->
  <target name="ppc" depends="commit-pull-push" />

  <target name="git-add-all">
    <echo msg="Git add all files" />
    <exec command="git add -A ${env.project.dir}" passthru="true" />
  </target>

  <target name="git-commit">
    <phingcall target="check-m" />
    <!-- <phingcall target="sniff-commit" /> -->
    <echo msg="Git commit" />
    <exec command="git commit -m '${m}'" passthru="true" />
  </target>

  <target name="git-push">
    <echo msg="Git push" />
    <gitpush
      repository="${env.project.dir}"
      refspec="${repo.branch}"
      quiet="false"
      />
  </target>

  <target name="git-pull">
    <echo msg="Git pull" />
    <gitpull
      repository="${env.project.dir}"
      source="origin"
      refspec="${repo.branch}"
      quiet="false"
      />
  </target>

  <target name="git-fetch">
    <echo msg="Git fetch" />
    <gitfetch
      repository="${env.project.dir}"
      all="true"
      quiet="false"
      />
  </target>

  <target name="check-m">
    <if>
      <or>
        <not>
          <isset property="m" />
        </not>
        <equals arg1="${m}" arg2="" />
      </or>
      <then>
        <echo msg='You should add commit message. Use command line option "-Dm=commit message here" (including quotes).' />
        <php expression="exit();" />
      </then>
    </if>
  </target>

  <target name="git-cherry-pick">
    <phingcall target="check-c" />
    <echo msg="Git cherry-pick" />
    <exec command="git cherry-pick '${c}'" passthru="true" />
  </target>

  <target name="cherry-pick">
    <phingcall target="check-c" />
    <phingcall target="git-fetch" />
    <phingcall target="git-cherry-pick" />
    <phingcall target="git-push" />
  </target>

  <target name="check-c">
    <if>
      <or>
        <not>
          <isset property="c" />
        </not>
        <equals arg1="${c}" arg2="" />
      </or>
      <then>
        <echo msg="You should add commit number. Use command line option -Dc=commit_number." />
        <php expression="exit();" />
      </then>
    </if>
  </target>

  <target name="sniff-commit">
    <if>
      <and>
        <isset property="no-sniff" />
        <or>
          <equals arg1="${no-sniff}" arg2="1" />
          <equals arg1="${no-sniff}" arg2="true" />
        </or>
      </and>
      <then>
        <property name="repo.autosniff" value="false" override="true" />
      </then>
    </if>
    <if>
      <equals arg1="${repo.autosniff}" arg2="true" />
      <then>
        <exec command="git diff --cached --name-only --diff-filter=ACRM" outputProperty="repo.commit-files" />
        <foreach list="${repo.commit-files}" param="env.codesniffer.sniff" target="sniff" delimiter="${line.separator}" />
      </then>
    </if>
  </target>

</project>
