<project name="drupal">

  <target name="cc">
    <drush command="cc" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>${projects.drush.cache}</param>
    </drush>
  </target>

  <target name="updatedb">
    <drush command="updatedb" assume="yes">
      <option name="root">${project.drupal.dir}</option>
    </drush>
  </target>

  <target name="run-tests">
    <phingcall target="modules-enable">
      <property name="projects.installable" value="simpletest" />
    </phingcall>
    <drush command="test-run" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>--all</param>
    </drush>
  </target>

  <target name="localize">
    <drush command="dl" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>l10n_update, drush_language</param>
    </drush>
    <drush command="en" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>l10n_update</param>
    </drush>
    <drush command="language-add" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>${project.drupal.locale}</param>
    </drush>
    <phingcall target="cc"/>
    <drush command="language-enable" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>${project.drupal.locale}</param>
    </drush>
    <drush command="language-default" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>${project.drupal.locale}</param>
    </drush>
    <drush command="l10n-update" assume="yes">
      <option name="root">${project.drupal.dir}</option>
    </drush>
  </target>

  <target name="clean-urls-disable">
    <echo msg="Disable clean-urls" />
    <drush command="vset" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>clean_url 0 --yes</param>
    </drush>
  </target>

  <target name="modules-enable">
    <echo msg="Install custom modules" />
    <drush command="en" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>${projects.installable}</param>
    </drush>
    <phingcall target="cc" />
  </target>

  <target name="modules-disable">
    <echo msg="Disable custom modules" />
    <drush command="dis" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>${projects.disable}</param>
    </drush>
    <phingcall target="cc" />
  </target>

  <target name="modules-uninstall">
    <echo msg="Uninstall custom modules" />
    <drush command="pm-uninstall" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>${projects.uninstall}</param>
    </drush>
    <phingcall target="cc" />
  </target>

  <target name="install-default-theme">
    <echo msg="Default theme installation" />
    <drush command="vset" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <param>theme_default ${project.drupal.theme.default}</param>
    </drush>
  </target>

  <target name="restore-settings-file" description="Configure settings.php">
    <!-- TODO: At present after deploy on stage file settings.php somehow changes owner.
         All further deploys will fail because of this. So for now we shouldn't interrupt
         deploy script if we failed to copy settings.php. -->
    <phingcall target="delete-settings-file" />
    <phingcall target="copy-settings-file" />
    <echo msg="Configure settings.php" />
  </target>

  <!-- Short alias for restore-settings-file -->
  <target name="settings" depends="restore-settings-file" />

  <target name="delete-settings-file" description="Delete settings file if it exists">
    <if>
      <available file="${project.drupal.settings.dir}/${project.drupal.settings.file}" />
      <then>
        <delete file="${project.drupal.settings.dir}/${project.drupal.settings.file}" quiet="true" />
        <echo msg="Delete settings.php file" />
      </then>
    </if>
  </target>

  <target name="copy-settings-file" description="Copy settings file if it exists">
    <echo msg="Copy file settings.php" />
    <copy file="${env.build.files.dir}/${server}.${project.drupal.settings.file}" tofile="${project.drupal.settings.dir}/${project.drupal.settings.file}" overwrite="true" haltonerror="false">
      <filterchain>
        <replacetokens begintoken="@" endtoken="@">
          <token key="db_name" value="${env.db.name}" />
          <token key="db_username" value="${env.db.user}" />
          <token key="db_password" value="${env.db.password}" />
          <token key="db_host" value="${env.db.host}" />
        </replacetokens>
      </filterchain>
    </copy>
  </target>

  <target name="drushrc-file-copy">
    <if>
      <available file="${env.build.files.dir}/${project.drupal.drushrc.file}" property="file_exists" />
      <then>
        <echo msg="Copy file drushrc.php" />
        <copy file="${env.build.files.dir}/${project.drupal.drushrc.file}" tofile="${project.drupal.settings.dir}/${project.drupal.drushrc.file}" overwrite="true" />
      </then>
    </if>
  </target>

  <!-- TODO: what's this anyway? -->
  <target name="patches-apply">
  </target>

  <target name="create-folder">
    <if>
      <not>
        <available file="${folder.creatable}" property="dir_exists" />
      </not>
      <then>
        <!-- TODO: Shouldn't we set mode to 0755? -->
        <mkdir dir="${folder.creatable}" mode="0777"/>
      </then>
    </if>
  </target>

  <target name="delete-folder">
    <if>
      <available file="${folder.deletable}" property="dir_exists" />
      <then>
        <delete dir="${folder.deletable}" />
        <echo msg="Folder is deleted." />
      </then>
    </if>
  </target>

  <target name="add-permission">
    <!-- TODO: Shouldn't we set mode to 0755 for dirs and 0644 for files? -->
    <chmod mode="0777" quiet="true" failonerror="false">
      <fileset dir="${project.drupal.dir}">
        <include name="sites/*"/>
      </fileset>
    </chmod>
  </target>

  <target name="aggregation-off">
    <echo msg="Disable aggregation of css and javascript files." />
    <drush command="vset" assume="yes">
      <param>preprocess_css FALSE</param>
      <option name="root">${project.drupal.dir}</option>
    </drush>
    <drush command="vset" assume="yes">
      <param>preprocess_js FALSE</param>
      <option name="root">${project.drupal.dir}</option>
    </drush>
  </target>

  <target name="devel-output-for-all">
    <echo msg="Enable access developer information for all user roles" />
    <drush command="sql-query">
      <param>"INSERT INTO role_permission VALUES (1,'access devel information','devel')"</param>
      <option name="root">${project.drupal.dir}</option>
    </drush>
    <drush command="sql-query">
      <param>"INSERT INTO role_permission VALUES (2,'access devel information','devel')"</param>
      <option name="root">${project.drupal.dir}</option>
    </drush>
  </target>

</project>
