<project name="restore">

  <target name="restore" depends="restore-custom-modules, restore-features-modules, restore-custom-themes, patches-apply" />

  <target name="restore-custom-modules" depends="ensure-custom-dir">
    <phingcall target="delete-folder">
      <property name="folder.deletable" value="${project.drupal.custom.dir}" />
    </phingcall>
    <copy todir="${project.drupal.custom.dir}">
      <fileset dir="${env.backup.dir}/modules/custom">
        <include name="**"/>
      </fileset>
    </copy>
    <echo msg="Custom modules were restore." />
  </target>

  <target name="restore-features-modules">
    <phingcall target="delete-folder">
      <property name="folder.deletable" value="${project.drupal.features.dir}" />
    </phingcall>
    <if>
      <available file="${env.backup.dir}/modules/features" property="dir_exists" />
      <then>
        <phingcall target="ensure-features-dir" />
        <copy todir="${project.drupal.features.dir}">
          <fileset dir="${env.backup.dir}/modules/features">
            <include name="**"/>
          </fileset>
        </copy>
      </then>
    </if>
    <echo msg="Features modules were restore." />
  </target>

  <target name="restore-custom-themes" depends="ensure-theme-dir">
    <phingcall target="delete-folder">
      <property name="folder.deletable" value="${project.drupal.theme.dir}" />
    </phingcall>
    <copy todir="${project.drupal.theme.dir}">
      <fileset dir="${env.backup.dir}/themes">
        <include name="**"/>
      </fileset>
    </copy>
  </target>

  <target name="restore-project-files" depends="files-backup-dir-create">
    <exec command="wget -O ${env.backup.files.dir}/files.tar.gz ${project.production_url}/files.tar.gz" passthru="true" checkreturn="true" />
    <if>
      <available file="${env.backup.files.dir}/files.tar.gz" />
      <then>
        <!-- TODO: Separate target. -->
        <phingcall target="delete-folder">
          <property name="folder.deletable" value="${project.drupal.files.dir}" />
        </phingcall>
        <phingcall target="create-folder">
          <property name="folder.creatable" value="${project.drupal.files.dir}" />
        </phingcall>
        <untar file="${env.backup.files.dir}/files.tar.gz" todir="${project.drupal.files.dir}" />
        <chmod mode="0777" quiet="true" failonerror="false">
          <fileset dir="${project.drupal.files.dir}">
            <include name="**"/>
          </fileset>
        </chmod>
      </then>
    </if>
  </target>

  <target name="ensure-custom-dir">
    <phingcall target="create-folder">
      <property name="folder.creatable" value="${project.drupal.custom.dir}" />
    </phingcall>
  </target>

  <target name="ensure-features-dir">
    <phingcall target="create-folder">
      <property name="folder.creatable" value="${project.drupal.features.dir}" />
    </phingcall>
  </target>

  <target name="ensure-theme-dir">
    <phingcall target="create-folder">
      <property name="folder.creatable" value="${project.drupal.theme.dir}" />
    </phingcall>
  </target>

  <target name="ensure-files-dir">
    <phingcall target="create-folder">
      <property name="folder.creatable" value="${project.drupal.files.dir}" />
    </phingcall>
  </target>

  <target name="restore-nodes">
    <if>
      <available file="${env.backup.dir}/nodes/nodes" property="files_exists" />
      <then>
        <drush command="migrate-auto-register">
          <option name="root">${project.drupal.dir}</option>
          <option name="uri">${project.drupal.uri}</option>
        </drush>
        <phingcall target="migrate-import" >
          <property name="drupal.migrate" value="IssueListNodes" />
        </phingcall>
        <phingcall target="migrate-import" >
          <property name="drupal.migrate" value="MediaNodes" />
        </phingcall>
        <phingcall target="migrate-import" >
          <property name="drupal.migrate" value="BookNodes" />
        </phingcall>
        <phingcall target="migrate-import" >
          <property name="drupal.migrate" value="IssueNodes" />
        </phingcall>
        <phingcall target="migrate-import" >
          <property name="drupal.migrate" value="MediaGroupNodes" />
        </phingcall>
        <phingcall target="migrate-import" >
          <property name="drupal.migrate" value="MediaAlbumNodes" />
        </phingcall>
        <phingcall target="migrate-import" >
          <property name="drupal.migrate" value="MediaImageNodes" />
        </phingcall>
        <echo msg="Restore nodes" />
      </then>
    </if>
  </target>

  <target name="migrate-import">
    <drush command="migrate-import">
      <option name="root">${project.drupal.dir}</option>
      <option name="uri">${project.drupal.uri}</option>
      <param>${drupal.migrate}</param>
    </drush>
  </target>

  <target name="features-apply">
    <if>
      <and>
        <isset property="project.drupal.module.features" />
        <not>
          <equals arg1="${project.drupal.module.features}" arg2="" />
        </not>
      </and>
      <then>
        <phingcall target="features-enable" />
        <foreach list="${project.drupal.module.features}" param="fe" target="feature-apply" delimiter="," />
        <phingcall target="cc" />
      </then>
    </if>
  </target>

  <target name="feature-apply">
    <drush command="features-revert" assume="yes">
      <option name="root">${project.drupal.dir}</option>
      <option name="uri">${project.drupal.uri}</option>
      <param>${fe}</param>
    </drush>
  </target>

  <target name="features-enable">
    <phingcall target="modules-enable">
      <property name="projects.installable" value="${project.drupal.module.features}" />
    </phingcall>
  </target>

</project>